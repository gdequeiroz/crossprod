<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crossprod</title><link>http://nacnudus.github.io/crossprod/</link><description>R, data, and frustration</description><atom:link href="http://nacnudus.github.io/crossprod/feeds/tag.harry-potter.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 20 Jul 2016 00:00:00 +1200</lastBuildDate><item><title>More Harry Potter story arcs (they getÂ darker)</title><link>http://nacnudus.github.io/crossprod/more-harry-potter-story-arcs-they-get-darker</link><description>&lt;p&gt;In my &lt;a href="http://nacnudus.github.io/crossprod/harry-potter-and-the-n-grams-of-sentiment"&gt;previous post&lt;/a&gt;, I applied &lt;a href="http://juliasilge.com/blog/"&gt;Julia
Silge&lt;/a&gt;&amp;#8216;s story-arc
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;sentiment&lt;/a&gt;
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;analysis&lt;/a&gt; method to the &lt;em&gt;Harry
Potter&lt;/em&gt; books. Twitter&amp;#8217;s response was a tweet about some very similar and
fascinating research, on &lt;a href="https://arxiv.org/abs/1606.07772"&gt;arXiv&lt;/a&gt;.  Here&amp;#8217;s
their beautiful&amp;nbsp;graph.&lt;/p&gt;
&lt;p&gt;&lt;img alt="*Harry Potter and the Deathly Hallows* sentiment arc, from Reagan et al.
https://arxiv.org/pdf/1606.07772v2.pdf" src="./figure/harry-potter-arcs-wizards.jpg" /&gt;.&lt;/p&gt;
&lt;p&gt;This post reproduces their method, using&amp;nbsp;R.&lt;/p&gt;
&lt;h3 id="method"&gt;Method&lt;/h3&gt;
&lt;p&gt;Reagan et al.&amp;#8217;s method differs in two ways. They use the sentiment dictionary
LabMT, a product of their own research group,
&lt;a href="http://hedonometer.org/index.html"&gt;Hedonometer&lt;/a&gt;, which is available in R in the
&lt;a href="https://github.com/trinker/qdapDictionaries"&gt;qdapDictionaries&lt;/a&gt; package.  Then
they smooth the scores by averaging inside a moving window.  The moving-window
method produces curves that make a lot more&amp;nbsp;sense.&lt;/p&gt;
&lt;p&gt;You can see their curves for all the Harry Potter books on their interactive
&lt;a href="http://hedonometer.org/books/v1/?book=Harry%20Potter%20and%20the%20Sorcerer%27s%20Stone"&gt;website&lt;/a&gt;,
which I highly&amp;nbsp;recommend.&lt;/p&gt;
&lt;p&gt;But I wanted to reproduce the method in R, for fun.  The main snag was handling
the moving window, which is one of the few under-developed parts of R munging at
the moment.  There&amp;#8217;s &lt;a href="https://github.com/kevinushey/RcppRoll"&gt;RcppRoll&lt;/a&gt;, which
implements a few obvious functions but no-longer allows custom functions, and
&lt;a href="https://cran.r-project.org/web/packages/zoo/index.html"&gt;zoo&lt;/a&gt;, which does allow
custom functions, but seems to want the input to be a timeseries &amp;#8212; fair enough,
it is a timeseries&amp;nbsp;library.&lt;/p&gt;
&lt;p&gt;So I did something hacky with base R and
&lt;a href="https://github.com/hadley/purrr"&gt;purrr&lt;/a&gt;.  Starting with two vectors, one for
the first and the other for the last row number of each window.  Putting those
into a list, I then &lt;strong&gt;transpose&lt;/strong&gt;d them, which you really have to see to
understand what it&amp;#8217;s doing &amp;#8212; basically it paired up each entry of each vector
into a vectors of length 2, each one an element of one overall list.  Then I
could use &lt;strong&gt;lapply&lt;/strong&gt; to iterate over each pair, generating a sequence of
rownumbers from the first to the last, and finally &lt;strong&gt;bind_rows&lt;/strong&gt; combined them
into a large dataframe of all rows in all windows.  I recommend running the code
below to see how this works.  Obviously the method doesn&amp;#8217;t scale too well, since
it loads all the windows into memory at&amp;nbsp;once.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Set up the moving-window-average parameters&lt;/span&gt;
N &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;nrow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;book&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Number of words in the book&lt;/span&gt;
k &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;10000&lt;/span&gt; &lt;span class="c1"&gt;# Number of words in each sample&lt;/span&gt;
l &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="c1"&gt;# Number of points in the time series&lt;/span&gt;
overlap &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;N &lt;span class="o"&gt;-&lt;/span&gt; k&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;l &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Number of words by which the window slides&lt;/span&gt;
overlap &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;N &lt;span class="o"&gt;-&lt;/span&gt; k &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;l&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Function in the paper -- I think it&amp;#39;s wrong, but it makes little difference.&lt;/span&gt;

&lt;span class="c1"&gt;# first and last words of each chunk&lt;/span&gt;
uppers &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;k&lt;span class="p"&gt;,&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; overlap&lt;span class="p"&gt;,&lt;/span&gt; length.out &lt;span class="o"&gt;=&lt;/span&gt; l&lt;span class="p"&gt;),&lt;/span&gt; N&lt;span class="p"&gt;)&lt;/span&gt;
lowers &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; overlap&lt;span class="p"&gt;,&lt;/span&gt; length.out &lt;span class="o"&gt;=&lt;/span&gt; l&lt;span class="p"&gt;),&lt;/span&gt; N &lt;span class="o"&gt;-&lt;/span&gt; k&lt;span class="p"&gt;)&lt;/span&gt; 

arc &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; 
  &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lowers&lt;span class="p"&gt;,&lt;/span&gt; uppers&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; 
  transpose &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; 
  at_depth&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;unlist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;slice&lt;span class="p"&gt;(&lt;/span&gt;book&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;length &lt;span class="o"&gt;=&lt;/span&gt; n&lt;span class="p"&gt;())})&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  bind_rows&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.i&lt;/span&gt;d &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;window&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  etc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One thing on my graphs that Hedonometer doesn&amp;#8217;t provide is the chapter titles,
so you can be reminded what is going on at each turn in the&amp;nbsp;plot.&lt;/p&gt;
&lt;p&gt;Enjoy the plots below, otherwise that&amp;#8217;s it for this post.  The code is, as
always, on &lt;a href="https://github.com/nacnudus/crossprod"&gt;GitHub&lt;/a&gt;, but you need to
supply your own copies of the&amp;nbsp;books.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-1.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-2.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-3.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-4.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-5.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-6.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-arcs-2-7.svg" title="plot of chunk harry-potter-arcs-2" alt="plot of chunk harry-potter-arcs-2" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;## Source: local data frame [0 x 1]
## Groups: title [0]
## 
## # ... with 1 variables: title &amp;lt;chr&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Duncan Garmonsway</dc:creator><pubDate>Wed, 20 Jul 2016 00:00:00 +1200</pubDate><guid>tag:nacnudus.github.io,2016-07-20:crossprod/more-harry-potter-story-arcs-they-get-darker</guid><category>R</category><category>text</category><category>Harry Potter</category></item><item><title>Harry Potter and the N-Grams ofÂ Sentiment</title><link>http://nacnudus.github.io/crossprod/harry-potter-and-the-n-grams-of-sentiment</link><description>&lt;p&gt;This post applies &lt;a href="http://juliasilge.com/blog/"&gt;Julia Silge&lt;/a&gt;&amp;#8216;s amazing story-arc
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;sentiment&lt;/a&gt;
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;analyses&lt;/a&gt; to the &lt;em&gt;Harry
Potter&lt;/em&gt;&amp;nbsp;books.&lt;/p&gt;
&lt;p&gt;It also busts the myth that &amp;#8220;turned on his heel&amp;#8221; is the series&amp;#8217; most common&amp;nbsp;phrase.&lt;/p&gt;
&lt;p&gt;Here is a related &lt;a href="https://duncan-garmonsway.shinyapps.io/harry-potter"&gt;shiny
app&lt;/a&gt; to explore the ideas&amp;nbsp;futher.&lt;/p&gt;
&lt;h2 id="super-easy-text-munging"&gt;Super-easy&amp;nbsp;text-munging&lt;/h2&gt;
&lt;p&gt;Casual text-munging is no longer a pain, thanks to a couple of new packages,
&lt;a href="https://github.com/juliasilge/tidytext"&gt;tidytext&lt;/a&gt; and
&lt;a href="https://github.com/lmullen/tokenizers"&gt;tokenizers&lt;/a&gt;, and a not-so-new one,
&lt;a href="https://github.com/gagolews/stringi"&gt;stringi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I last analysed Harry Potter a few years ago, the
&lt;a href="https://cran.r-project.org/web/packages/tm/index.html"&gt;tm&lt;/a&gt; package, though
powerful, was frustrating, partly due to its unusual data format, which was
tricky to traverse.  But these new packages operate on ordinary data frames,
using nesting to great&amp;nbsp;effect.&lt;/p&gt;
&lt;p&gt;The outcome is that n-grams can be created incredibly quickly, easily avoiding
sentence boundaries.  The code is as simple as&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;books &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="c1"&gt;# One row per paragraph. Two columns: title and text&lt;/span&gt;
  &lt;span class="c1"&gt;# First, break into sentences so that ngrams don&amp;#39;t cross sentence boundaries&lt;/span&gt;
  group_by&lt;span class="p"&gt;(&lt;/span&gt;title&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  summarise&lt;span class="p"&gt;(&lt;/span&gt;sentence &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;unlist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;map&lt;span class="p"&gt;(&lt;/span&gt;text&lt;span class="p"&gt;,&lt;/span&gt; tokenize_sentences&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  unnest &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="c1"&gt;# Then create 4-grams&lt;/span&gt;
  group_by&lt;span class="p"&gt;(&lt;/span&gt;title&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  summarise&lt;span class="p"&gt;(&lt;/span&gt;fourgram &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;unlist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tokenize_ngrams&lt;span class="p"&gt;(&lt;/span&gt;sentence&lt;span class="p"&gt;,&lt;/span&gt; n &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  unnest
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="most-common-phrases-in-harry-potter"&gt;Most-common phrases in &lt;em&gt;Harry&amp;nbsp;Potter&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Did you hear that the most common phrase in &lt;em&gt;Harry Potter&lt;/em&gt; is &amp;#8220;turned on his
heel&amp;#8221;?  I can finally bust that myth.  It does appear quite often &amp;#8212; 12 times at
most, if you include &amp;#8216;turning&amp;#8217; and &amp;#8216;her&amp;#8217;, but the most-common four-word phrase,
by &lt;em&gt;miles&lt;/em&gt;, is &amp;#8220;Harry, Ron and Hermione&amp;#8221;.  Big&amp;nbsp;surprise.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-fourgrams-1.svg" title="plot of chunk harry-potter-sentiment-fourgrams" alt="plot of chunk harry-potter-sentiment-fourgrams" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;A few of these are predictable nouns (Defence Against the Dark Arts, the
Ministry of Magic, the Room of Requirement).  He Who Must Not Be Named makes it
into the top 40.  There are a bunch of phrases that describe where things are
(at the end of, etc.).  But the most intriguing phrase is &amp;#8220;said Hermione in a&amp;#8221;
&amp;#8212; why is Hermione singled out by that&amp;nbsp;construction?&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s a &lt;a href="https://duncan-garmonsway.shinyapps.io/harry-potter/#n-grams"&gt;shiny
app&lt;/a&gt; to explore
lots more n-grams, from 2-grams to&amp;nbsp;10-grams.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.slate.com/articles/arts/culturebox/2013/11/hunger_games_catching_fire_a_textual_analysis_of_suzanne_collins_novels.html?wpisrc=burger_bar"&gt;Slate&lt;/a&gt;
did a similar analysis, though they looked at the most-common &lt;em&gt;sentences&lt;/em&gt;,
comparing &lt;em&gt;Harry Potter&lt;/em&gt; with &lt;em&gt;The Hunger Games&lt;/em&gt; and the &lt;em&gt;Twilight&lt;/em&gt;&amp;nbsp;series.&lt;/p&gt;
&lt;p&gt;They seem to have edited their list somewhat, since &amp;#8220;He waited&amp;#8221; appears only
three times, and &amp;#8220;Something he didn&amp;#8217;t have last time&amp;#8221; only twice, while I find
that &amp;#8220;Harry nodded&amp;#8221; tops my list (of complete sentences) with 14 occurences,
one more than Slate&amp;#8217;s top sentence, &amp;#8220;Nothing&amp;nbsp;happened.&amp;#8221;&lt;/p&gt;
&lt;p&gt;Here are my top 30, many of which are not complete&amp;nbsp;sentences.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-sentences-1.svg" title="plot of chunk harry-potter-sentiment-sentences" alt="plot of chunk harry-potter-sentiment-sentences" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;Part of the difficulty is that written English speech isn&amp;#8217;t unambiguously
punctuated.  This has bugged me since primary school.  See what happens&amp;nbsp;here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tokenize_sentences&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;Are you going?&amp;#39; Harry asked.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="s"&gt;&amp;quot;Ron asked, &amp;#39;Are you going?&amp;#39; Harry shrugged.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="s"&gt;&amp;quot;&amp;#39;You should go,&amp;#39; Harry said&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="s"&gt;&amp;quot;&amp;#39;Go now.&amp;#39; Harry went.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [[1]]
## [1] &amp;quot;&amp;#39;Are you going?&amp;#39;&amp;quot; &amp;quot;Harry asked.&amp;quot;    
## 
## [[2]]
## [1] &amp;quot;Ron asked, &amp;#39;Are you going?&amp;#39;&amp;quot; &amp;quot;Harry shrugged.&amp;quot;            
## 
## [[3]]
## [1] &amp;quot;&amp;#39;You should go,&amp;#39; Harry said&amp;quot;
## 
## [[4]]
## [1] &amp;quot;&amp;#39;Go now.&amp;#39;&amp;quot;   &amp;quot;Harry went.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Were I king, I&amp;#8217;d decree the following unambiguous&amp;nbsp;style.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tokenize_sentences&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ron asked, &amp;#39;Are you going?&amp;#39;. Harry shrugged.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="s"&gt;&amp;quot;&amp;#39;You should go.&amp;#39;, Harry said&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [[1]]
## [1] &amp;quot;Ron asked, &amp;#39;Are you going?&amp;#39;.&amp;quot; &amp;quot;Harry shrugged.&amp;quot;             
## 
## [[2]]
## [1] &amp;quot;&amp;#39;You should go.&amp;#39;, Harry said&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="most-important-characters"&gt;Most-important&amp;nbsp;characters&lt;/h2&gt;
&lt;p&gt;If importance is proportional to mentions of first names, then Hermione and Ron
are not as equal as you might&amp;nbsp;expect.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-characters-1.svg" title="plot of chunk harry-potter-sentiment-characters" alt="plot of chunk harry-potter-sentiment-characters" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;h2 id="sentiment-driven-story-arcs"&gt;Sentiment-driven story&amp;nbsp;arcs&lt;/h2&gt;
&lt;p&gt;Ever since I read &lt;a href="http://juliasilge.com/blog/"&gt;Julia Silge&lt;/a&gt;&amp;#8216;s amazing story-arc
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;sentiment&lt;/a&gt;
&lt;a href="http://juliasilge.com/blog/Life-Changing-Magic/"&gt;analyses&lt;/a&gt;, I wanted to apply
the method to the &lt;em&gt;Harry Potter&lt;/em&gt;&amp;nbsp;books.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s a &lt;a href="https://duncan-garmonsway.shinyapps.io/harry-potter/#sentiment"&gt;shiny
app&lt;/a&gt; to explore
this interactively, but here is a still for the&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-arcarea-1.svg" title="plot of chunk harry-potter-sentiment-arcarea" alt="plot of chunk harry-potter-sentiment-arcarea" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;If there&amp;#8217;s anything to interpret here, then it&amp;#8217;s that the first three books
play the game &amp;#8220;fortunately, unfortunately&amp;#8221;, while the later books are a little
different, especially &lt;em&gt;Order of the Phoenix&lt;/em&gt;, which is the grumpy&amp;nbsp;one.&lt;/p&gt;
&lt;p&gt;Perhaps the Fourier transform is too sensitive to a magic number that I call the
&amp;#8216;wiggliness&amp;#8217; parameter.  To see how sensitive, I calculated the arcs for
&amp;#8216;wiggliness&amp;#8217; values from 3 to 10, and described the range of the arcs with a
ribbon &amp;#8212; a little like the standard-error-ribbon on a &lt;code&gt;geom_smooth&lt;/code&gt;.  I think
the ribbons show a more reliable story arc, and reveal that narrow wobbles, of
the order of a chapter or so, are probably&amp;nbsp;misleading.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-ribbon-1.svg" title="plot of chunk harry-potter-sentiment-ribbon" alt="plot of chunk harry-potter-sentiment-ribbon" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;And to see where the &amp;#8216;wiggliness = 3&amp;#8217; arc lies in the range, I superimpose it as a&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/harry-potter-sentiment-ribbon-arcline-1.svg" title="plot of chunk harry-potter-sentiment-ribbon-arcline" alt="plot of chunk harry-potter-sentiment-ribbon-arcline" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;The code is, as always, on &lt;a href="https://github.com/nacnudus/crossprod"&gt;GitHub&lt;/a&gt;, but
you need to supply your own copies of the&amp;nbsp;books.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Duncan Garmonsway</dc:creator><pubDate>Wed, 13 Jul 2016 00:00:00 +1200</pubDate><guid>tag:nacnudus.github.io,2016-07-13:crossprod/harry-potter-and-the-n-grams-of-sentiment</guid><category>R</category><category>text</category><category>Harry Potter</category></item></channel></rss>