<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Crossprod</title><link href="http://nacnudus.github.io/crossprod/" rel="alternate"></link><link href="http://nacnudus.github.io/crossprod/feeds/category.miscellaneous.atom.xml" rel="self"></link><id>http://nacnudus.github.io/crossprod/</id><updated>2016-04-25T00:00:00+12:00</updated><entry><title>R rounding is weird? TryÂ JavaScript!</title><link href="http://nacnudus.github.io/crossprod/r-rounding-is-weird-try-javascript" rel="alternate"></link><updated>2016-04-25T00:00:00+12:00</updated><author><name>Duncan Garmonsway</name></author><id>tag:nacnudus.github.io,2016-04-25:crossprod/r-rounding-is-weird-try-javascript</id><summary type="html">&lt;h2 id="round05-0-eh"&gt;round(0.5) == 0?&amp;nbsp;Eh?&lt;/h2&gt;
&lt;p&gt;A common source of confusion in R is rounding-to-even (example adapted from&amp;nbsp;?round):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x1&lt;span class="p"&gt;)),&lt;/span&gt; nrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; byrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#-- IEEE rounding !&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
## [1,]   -2 -1.5   -1 -0.5    0  0.5    1  1.5    2   2.5     3   3.5     4
## [2,]   -2 -2.0   -1  0.0    0  0.0    1  2.0    2   2.0     3   4.0     4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This post does five&amp;nbsp;things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Illustrates rounding bias with a&amp;nbsp;graph.&lt;/li&gt;
&lt;li&gt;Discovers that JavaScript (in my browser) rounds the other&amp;nbsp;way.&lt;/li&gt;
&lt;li&gt;Encounters floating-point difficulties when emulating&amp;nbsp;JavaScript.&lt;/li&gt;
&lt;li&gt;Calls JavaScript itself via the V8&amp;nbsp;package.&lt;/li&gt;
&lt;li&gt;Explains where all the time&amp;nbsp;goes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="graph-of-rounding-bias"&gt;Graph of rounding&amp;nbsp;bias&lt;/h2&gt;
&lt;p&gt;Here is an unpolished graphical illustration of the bias introduced by rounding
halves (0.5, 1.5, etc.) away from zero.  The details of the difference are
neatly explained in the &lt;a href="http://www.burns-stat.com/pages/Tutor/R_inferno.pdf"&gt;R
Inferno&lt;/a&gt;, circle&amp;nbsp;8.1.52.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Round-to-even is the R default&lt;/span&gt;
round_to_even &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;round&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Round-away-from-zero function adapted from http://stackoverflow.com/a/12688836/937932&lt;/span&gt;
round_away_from_zero &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; digits &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  posneg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;
  z &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;digits
  z &lt;span class="o"&gt;=&lt;/span&gt; z &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;
  z &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;trunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)&lt;/span&gt;
  z &lt;span class="o"&gt;=&lt;/span&gt; z &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;digits&lt;span class="p"&gt;)&lt;/span&gt;
  z&lt;span class="o"&gt;*&lt;/span&gt;posneg
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="./figure/rounding-bias-1-1.svg" title="plot of chunk rounding-bias-1" alt="plot of chunk rounding-bias-1" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;h2 id="javascript-rounding-in-the-chrome-browser"&gt;JavaScript rounding in the Chrome&amp;nbsp;browser&lt;/h2&gt;
&lt;p&gt;But when I tried to emulated a website&amp;#8217;s behaviour in R, it turned out that
Chrome was rounding towards odd numbers after the decimal point (anyone know
why?).  Try the following in the Chrome Developer Console (ctrl+shift+c in a&amp;nbsp;tab).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Rounds away from zero&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Rounds to odd&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.15&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.15&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;How odd is that?  So I adapted a &lt;a href="https://www.mathworks.com/matlabcentral/fileexchange/40286-rounding-functions-collection"&gt;handy &lt;span class="caps"&gt;MATLAB&lt;/span&gt;
implementation&lt;/a&gt;
of rounding-to-odd, and compared it with the other two&amp;nbsp;strategies.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Round-to-odd function adapted from&lt;/span&gt;
&lt;span class="c1"&gt;# https://www.mathworks.com/matlabcentral/fileexchange/40286-rounding-functions-collection&lt;/span&gt;
round_to_odd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; digits &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;digits
  z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; y &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kp"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;))&lt;/span&gt;
  z&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;is.nan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  z&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;z&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; round_away_from_zero&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;-&lt;/span&gt; z&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  z &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;digits&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="./figure/rounding-bias-2-1.svg" title="plot of chunk rounding-bias-2" alt="plot of chunk rounding-bias-2" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;The graph shows that, like rounding-to-even, rounding-to-odd is unbiased, but a
snag is that successive rounded operations will never reach zero (see comments
on &lt;a href="http://programmers.stackexchange.com/a/256269/111311"&gt;this StackExchange
answer&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;77&lt;/span&gt;
&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; round_to_odd&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kp"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## 39 , 19 , 9 , 5 , 3 , 1 , 1 , 1 , 1 , 1 ,
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;77&lt;/span&gt;
&lt;span class="kr"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; round_to_even&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kp"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## 38 , 19 , 10 , 5 , 2 , 1 , 0 , 0 , 0 , 0 ,
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="floating-point-errors"&gt;Floating point&amp;nbsp;errors&lt;/h2&gt;
&lt;p&gt;Using my new round-to-odd function to emulate JavaScript behaviour, I
encountered floating point errors.  For example, take the number&amp;nbsp;6.65:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%.16f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6.65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;6.6500000000000004&amp;quot; &amp;quot;6.6499999999999995&amp;quot; &amp;quot;6.6500000000000004&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The tiny differences don&amp;#8217;t affect rounding in&amp;nbsp;R:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;round_to_odd&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6.65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 6.7 6.7 6.7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But they do affect rounding in JavaScript.  Again, paste these into the browser&amp;nbsp;console:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;console.log((6.65).toFixed(1));
console.log((7 * 0.95).toFixed(1));
console.log((7 - 0.35).toFixed(1));
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="calling-javascript-v8-engine-via-the-v8-package"&gt;Calling JavaScript V8 engine via the V8&amp;nbsp;package&lt;/h2&gt;
&lt;p&gt;At this point, I gave up on emulating JavaScript behaviour in R, and resorted to
calling JavaScript from R via the
&lt;a href="https://cran.r-project.org/web/packages/V8/index.html"&gt;V8&lt;/a&gt; package, which uses
the V8 JavaScript engine, the same that my browser (Chrome)&amp;nbsp;uses.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;V8&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# library(V8)&lt;/span&gt;
ct &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; V8&lt;span class="o"&gt;::&lt;/span&gt;v8&lt;span class="p"&gt;()&lt;/span&gt;
roundjs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; digits&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;ct&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Number((&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%.16f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;).toFixed(&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; digits&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;))&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
roundjs&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6.65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 6.7 6.6 6.7
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="what-took-me-so-long"&gt;What took me so&amp;nbsp;long&lt;/h2&gt;
&lt;p&gt;This was a particularly tricky part of a bigger project (see next week&amp;#8217;s&amp;nbsp;post).  &lt;/p&gt;
&lt;p&gt;Most of the time went on finding, testing and correcting the two rounding
functions for round-to-odd and round-away-from-zero.  I adapted the round-to-odd
function from some &lt;a href="https://www.mathworks.com/matlabcentral/fileexchange/40286-rounding-functions-collection"&gt;handy &lt;span class="caps"&gt;MATLAB&lt;/span&gt;
implementations&lt;/a&gt;
of various rounding strategies.  Unfortunately, they depended on &lt;span class="caps"&gt;MATLAB&lt;/span&gt;&amp;#8217;s
built-in &lt;code&gt;round&lt;/code&gt; function, which, according to its
&lt;a href="https://uk.mathworks.com/help/matlab/ref/round.html"&gt;documentation&lt;/a&gt;, rounds
away from zero, so I had to find a round-away-from-zero function in R first.
Even then, it didn&amp;#8217;t work for negatives when I ported it to R, probably due to
fundamental language&amp;nbsp;differences:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Surprising behaviour of &lt;/span&gt;
&lt;span class="m"&gt;-1.5&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 0.5
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Predictable behaviour (but different to MATLAB?)&lt;/span&gt;
&lt;span class="m"&gt;-1.0&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] NaN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also spent quite a while on the graphs of bias, where I befuddled myself by
drawing random numbers between 0 to 1 (which is unfair on unbiased functions,
because only 0.5 is represented, not 1.5), and by not doing preliminary rounding
on the random draws (which meant that 0.5, 1.5, etc., weren&amp;#8217;t represented at&amp;nbsp;all).&lt;/p&gt;
&lt;p&gt;Finally, my initial V8 function used the V8 package&amp;#8217;s own magic for passing
values to the V8 engine, but when it didn&amp;#8217;t work, I suspected that the values
were being passed as a string, and that R was rounding them as part of the
conversion.  For&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;V8&lt;span class="p"&gt;)&lt;/span&gt;
roundjs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; digits&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  ct &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; V8&lt;span class="o"&gt;::&lt;/span&gt;v8&lt;span class="p"&gt;()&lt;/span&gt;
  ct&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kn"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;system.file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/underscore.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; package&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;V8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Essential for _&lt;/span&gt;
  ct&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;digits&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; digits&lt;span class="p"&gt;)&lt;/span&gt;
  xrounded &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; 
    ct&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_.forEach&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            x&lt;span class="p"&gt;,&lt;/span&gt;
            V8&lt;span class="o"&gt;::&lt;/span&gt;JS&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;function(item, index, arr) {arr[index] = Number(item.toFixed(digits));}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  xrounded
&lt;span class="p"&gt;}&lt;/span&gt;
roundjs&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6.65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 6.7 6.7 6.7
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="code-for-the-graphs"&gt;Code for the&amp;nbsp;graphs&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Compare the two systems&lt;/span&gt;
&lt;span class="c1"&gt;# x1 &amp;lt;- seq(-2.5, 2.5)&lt;/span&gt;
&lt;span class="c1"&gt;# matrix(c(x1,&lt;/span&gt;
&lt;span class="c1"&gt;#          round_to_even(x1),&lt;/span&gt;
&lt;span class="c1"&gt;#          round_to_odd(x1)),&lt;/span&gt;
&lt;span class="c1"&gt;#        nrow = 3, byrow = TRUE)&lt;/span&gt;

&lt;span class="c1"&gt;# Graph the bias of many random draws&lt;/span&gt;
N &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;10000&lt;/span&gt;
bias&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;FUN&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Round to one decimal place to ensure 0.5 ever appears.&lt;/span&gt;
  &lt;span class="c1"&gt;# Draw between 0 and 2 to fairly represent both 0.5 and 1.5.&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;runif&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; min &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; max &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;FUN&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

bias_to_even &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;N&lt;span class="p"&gt;,&lt;/span&gt; bias&lt;span class="p"&gt;(&lt;/span&gt;round_to_even&lt;span class="p"&gt;))&lt;/span&gt;
bias_away_from_zero &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;N&lt;span class="p"&gt;,&lt;/span&gt; bias&lt;span class="p"&gt;(&lt;/span&gt;round_away_from_zero&lt;span class="p"&gt;))&lt;/span&gt;

limits &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  hist&lt;span class="p"&gt;(&lt;/span&gt;bias_to_even&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; limits&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lightgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  hist&lt;span class="p"&gt;(&lt;/span&gt;bias_away_from_zero&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; limits&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Compare the three systems&lt;/span&gt;
&lt;span class="c1"&gt;# x1 &amp;lt;- seq(-2.5, 2.5)&lt;/span&gt;
&lt;span class="c1"&gt;# matrix(c(x1,&lt;/span&gt;
&lt;span class="c1"&gt;#          round_to_even(x1),&lt;/span&gt;
&lt;span class="c1"&gt;#          round_away_from_zero(x1),&lt;/span&gt;
&lt;span class="c1"&gt;#          round_to_odd(x1)), nrow = 4, byrow = TRUE)&lt;/span&gt;

bias_to_odd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;N&lt;span class="p"&gt;,&lt;/span&gt; bias&lt;span class="p"&gt;(&lt;/span&gt;round_to_odd&lt;span class="p"&gt;))&lt;/span&gt;

limits &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  hist&lt;span class="p"&gt;(&lt;/span&gt;bias_to_even&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; limits&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lightgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  hist&lt;span class="p"&gt;(&lt;/span&gt;bias_away_from_zero&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; limits&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  hist&lt;span class="p"&gt;(&lt;/span&gt;bias_to_odd&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; limits&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="R"></category><category term="JavaScript"></category></entry><entry><title>How many R-Bloggers areÂ there?</title><link href="http://nacnudus.github.io/crossprod/how-many-r-bloggers-are-there" rel="alternate"></link><updated>2016-04-18T00:00:00+12:00</updated><author><name>Duncan Garmonsway</name></author><id>tag:nacnudus.github.io,2016-04-18:crossprod/how-many-r-bloggers-are-there</id><summary type="html">&lt;p&gt;This post does three&amp;nbsp;things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finds out how many R-related blogs there are &lt;em&gt;really&lt;/em&gt; (not a well-defined&amp;nbsp;question).&lt;/li&gt;
&lt;li&gt;Shows that I can use semi-structured non-csv data (job interview&amp;nbsp;weakness).&lt;/li&gt;
&lt;li&gt;Explains where all the time&amp;nbsp;goes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many people who promote R quote the number of R blogs as given on the
&lt;a href="http://www.r-bloggers.com/"&gt;R-Bloggers&lt;/a&gt; website by Tal Galili, which syndicates
literally hundreds of R-related blogs (573 at the time of writing).  But the
number tends only to increase.  How many actual posts are there in a given
week/month, from how many different&amp;nbsp;blogs?&lt;/p&gt;
&lt;h2 id="update-30-april-2016"&gt;Update 30 April&amp;nbsp;2016&lt;/h2&gt;
&lt;p&gt;I have a longer history of daily digest emails than I thought.  The data, and
some of the text, has been updated to go back to October&amp;nbsp;2013.&lt;/p&gt;
&lt;h2 id="the-gist-of-it"&gt;The gist of&amp;nbsp;it&lt;/h2&gt;
&lt;p&gt;I subscribed to the &lt;a href="http://www.r-bloggers.com/"&gt;R-Bloggers&lt;/a&gt; daily digest emails
in early 2014, giving me a good time-series of&amp;nbsp;posts.&lt;/p&gt;
&lt;p&gt;The initial dump is easy from Gmail (define a filter &amp;gt; use it to apply a
new label &amp;gt; request a dump of the labelled emails).  Since the dump is in a
single plain-text file, and because the amazing R-community has bothered to
generalise so many solutions to fiddly problems by making packages, all the
remaining steps are also&amp;nbsp;easy.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Separate the emails into individual files, using &lt;code&gt;convert_mbox_eml&lt;/code&gt; in the
   &lt;code&gt;tm.plugin.mail&lt;/code&gt; package.&lt;/li&gt;
&lt;li&gt;Parse the date-time in the first line of each file, using base R (hooray for&amp;nbsp;base!)&lt;/li&gt;
&lt;li&gt;Parse the &lt;span class="caps"&gt;HTML&lt;/span&gt; email content using &lt;code&gt;read_html&lt;/code&gt; in the &lt;code&gt;xml2&lt;/code&gt; package (which
   has its own magic to trim off the non-&lt;span class="caps"&gt;HTML&lt;/span&gt; email&amp;nbsp;headers).&lt;/li&gt;
&lt;li&gt;Extract the names of the blogs in each email using an XPath string created by
   the &lt;em&gt;SelectorGadget&lt;/em&gt; browser&amp;nbsp;extension/bookmarklet.&lt;/li&gt;
&lt;li&gt;Mung and analyse the&amp;nbsp;data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="the-answer"&gt;The&amp;nbsp;answer&lt;/h2&gt;
&lt;p&gt;It turns out that there are about 75 blogs active in a given month, posting
about 160 posts (Revolutions is the only one that regularly posts more than once
per week).  Nothing much has changed in the last year.  For some arbitrary
definition of &amp;#8220;dead blog&amp;#8221;, a survival analysis could be&amp;nbsp;done.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/rbloggers-periodical-1.svg" title="plot of chunk rbloggers-periodical" alt="plot of chunk rbloggers-periodical" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;h2 id="what-took-me-so-long"&gt;What took me so&amp;nbsp;long&lt;/h2&gt;
&lt;p&gt;This was an easy project, but a few quirks soaked up a lot of&amp;nbsp;time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I wanted to initialise an empty list, to store information collected by
  looping through the emails.  This is one of my favourite R idiosyncracies.
  Consider how the following function could be any less intuitive: &lt;code&gt;empty_list
  &amp;lt;- vector(mode = "list", length = n)&lt;/code&gt;.  I usually don&amp;#8217;t think of lists as a
  kind of vector, and usually think of them as a class rather than a mode, but
  perhaps that&amp;#8217;s just&amp;nbsp;me.&lt;/li&gt;
&lt;li&gt;Gmail filters and labels &lt;em&gt;conversations&lt;/em&gt;, rather than individual emails, so
  the occasional forward of an R-Bloggers digest scuppered the&amp;nbsp;code.&lt;/li&gt;
&lt;li&gt;One of the digests had a glitch &amp;#8212; no links to the originial blogs.  The date
  is given in a non-&lt;code&gt;lubridate&lt;/code&gt;-friendly order, so I had to rediscover
  &lt;code&gt;strptime&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Some blog names include unusual characters that appear in the plain text in a
  funny way (e.g. &amp;#8220;=E2=80=A6&amp;#8221;).  These had to be found-and-replaced (using
  &lt;code&gt;stringr&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;While, &lt;code&gt;xml_find_all&lt;/code&gt; in the &lt;code&gt;xml2&lt;/code&gt; package&amp;nbsp;understands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3D\"itemcontentlist\"&lt;/code&gt; as part of an XPath string, I intially fell foul of
  &lt;code&gt;html_nodes&lt;/code&gt; in the &lt;code&gt;rvest&lt;/code&gt; package, which doesn&amp;#8217;t seem to understand it as
  part of a &lt;span class="caps"&gt;CSS&lt;/span&gt;&amp;nbsp;string.&lt;/li&gt;
&lt;li&gt;Given a named list, how can you crate a data frame that links the names to the
  each element of the vectors?  Finding this kind of thing out is entirely a
  game of Google Search Term Bingo, but in this case I used part of a clever
  &lt;a href="http://stackoverflow.com/a/16326629/937932"&gt;StackOverflow solution&lt;/a&gt; of a
  different problem.  To save you digging around in the &lt;code&gt;purrr&lt;/code&gt; or &lt;code&gt;rlist&lt;/code&gt;
  packages, the answer is &lt;code&gt;stack&lt;/code&gt; in (hooray!) &lt;code&gt;base&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But the biggest time-sucker by far was the bizarre way that the plain text of
the emails had been trimmed to 76 characters, by sticking an equals sign and a
Windows-style line-ending (carriage return and line feed, i.e. &lt;code&gt;\r\n&lt;/code&gt;) after the
75th character.  This is snag-tastic, because it&amp;#8217;s hard to find a tool that will
both search-and-replace across line-endings, and also search-and-replace
multiple characters.  &lt;code&gt;sed&lt;/code&gt; is one of those command-line tools that lurks for
years before pouncing, and this was its moment, when I finally had to learn a
bit more than merely &lt;code&gt;s/pattern/replacement/g&lt;/code&gt;.  &lt;a href="http://stackoverflow.com/a/7697604/937932"&gt;This StackOverflow
answer&lt;/a&gt; explains how the following
command works: &lt;code&gt;sed ':a;N;$!ba;s/=\r\n//g' dirty.mbox &amp;gt; clean.mbox&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="reward"&gt;Reward&lt;/h2&gt;
&lt;p&gt;Thankyou for reading. Here are some more graphs, and some code&amp;nbsp;fragments.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/rbloggers-top10-1.svg" title="plot of chunk rbloggers-top10" alt="plot of chunk rbloggers-top10" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://nacnudus.github.io/crossprod/figure/rbloggers-rates-1.svg" title="plot of chunk rbloggers-rates" alt="plot of chunk rbloggers-rates" width="960px" height="540px" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# NOTE: These are frangments of code.  They do not stand alone.&lt;/span&gt;

&lt;span class="c1"&gt;# Collect the file names&lt;/span&gt;
emails &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;list.files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mail_dir&lt;span class="p"&gt;,&lt;/span&gt; full.names &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Remove the &amp;quot;confirm email address&amp;quot; one&lt;/span&gt;
&lt;span class="c1"&gt;# and the one that has no links to the original blogs&lt;/span&gt;
emails &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; emails&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-342&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c1"&gt;# Remove any that are replies&lt;/span&gt;
emails &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; emails&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;vapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;emails&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filename&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                          &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;grepl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^In-Reply-To: &amp;lt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="kp"&gt;readLines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filename&lt;span class="p"&gt;,&lt;/span&gt; n &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)))},&lt;/span&gt;
                        &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c1"&gt;# Collect the datetimes in the first line of each file&lt;/span&gt;
&lt;span class="c1"&gt;# Also collect the journals from the subject lines&lt;/span&gt;
n &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;emails&lt;span class="p"&gt;)&lt;/span&gt;
datetimes &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;character&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; n&lt;span class="p"&gt;)&lt;/span&gt;
blogcounts &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;character&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; n&lt;span class="p"&gt;)&lt;/span&gt;
blogs  &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length &lt;span class="o"&gt;=&lt;/span&gt; n&lt;span class="p"&gt;)&lt;/span&gt;
i &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;filename &lt;span class="kr"&gt;in&lt;/span&gt; emails&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  i &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; i &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  datetimes&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;readLines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filename&lt;span class="p"&gt;,&lt;/span&gt; n &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;# Extract the links to the original blogs&lt;/span&gt;
  blogs&lt;span class="p"&gt;[[&lt;/span&gt;i&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; 
    read_html&lt;span class="p"&gt;(&lt;/span&gt;filename&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
    xml_find_all&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//*[(@id = &amp;#39;3D\&amp;quot;itemcontentlist\&amp;quot;&amp;#39;)]//div//div//strong[(((count(preceding-sibling::*) + 1) = 1) and parent::*)]//a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
    xml_text
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Extract the datetime string&lt;/span&gt;
datetimes &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;
  datetimes &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  str_sub&lt;span class="p"&gt;(&lt;/span&gt;start &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;34&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="kp"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;format &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%b %d %H:%M:%S %z %Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Link the datetime with individual blogs&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;blogs&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; datetimes
blogs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stack&lt;span class="p"&gt;(&lt;/span&gt;blogs&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Recover the dates and clean the blog names&lt;/span&gt;
blogs &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; 
  blogs &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  rename&lt;span class="p"&gt;(&lt;/span&gt;blog &lt;span class="o"&gt;=&lt;/span&gt; values&lt;span class="p"&gt;,&lt;/span&gt; datetime &lt;span class="o"&gt;=&lt;/span&gt; ind&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  mutate&lt;span class="p"&gt;(&lt;/span&gt;datetime &lt;span class="o"&gt;=&lt;/span&gt; ymd_hms&lt;span class="p"&gt;(&lt;/span&gt;datetime&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="c1"&gt;# blog = str_replace(blog, fixed(&amp;quot;=\\n&amp;quot;), &amp;quot;&amp;quot;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=C2=BB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Â»&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=E2=80=93&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;â&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=E2=80=A6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;â¦&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=C3=A6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ã¦&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=EA=B0=84=EB=93=9C=EB=A3=A8=EB=93=9C =ED=81=AC=EB=A6=AC=EC=8A=A4=ED=86=A0=ED=8C=8C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;(ê°ëë£¨ë í¬ë¦¬ì¤í í)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_replace&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;,&lt;/span&gt; fixed&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;=D0=AF=D1=82=D0=BE=D0=BC=D0=B8=D0=B7=D0=BE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ğ¯ÑĞ¾Ğ¼Ğ¸Ğ·Ğ¾&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         blog &lt;span class="o"&gt;=&lt;/span&gt; str_trim&lt;span class="p"&gt;(&lt;/span&gt;blog&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="R"></category></entry><entry><title>New R package:Â nzcrash</title><link href="http://nacnudus.github.io/crossprod/new-r-package-nzcrash" rel="alternate"></link><updated>2015-07-13T00:00:00+12:00</updated><author><name>Duncan Garmonsway</name></author><id>tag:nacnudus.github.io,2015-07-13:crossprod/new-r-package-nzcrash</id><summary type="html">&lt;h1 id="introducing-the-nzcrash-package"&gt;Introducing the nzcrash&amp;nbsp;package&lt;/h1&gt;
&lt;p&gt;This &lt;a href="https://github.com/nacnudus/nzcrash"&gt;package&lt;/a&gt; redistributes crash statistics already available from the New Zealand Transport Agency, but in a more convenient&amp;nbsp;form.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s a large package (over 20 megabytes,&amp;nbsp;compressed).&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;library&lt;/span&gt;(nzcrash)
&lt;span class="kw"&gt;library&lt;/span&gt;(dplyr)
&lt;span class="kw"&gt;library&lt;/span&gt;(tidyr)
&lt;span class="kw"&gt;library&lt;/span&gt;(magrittr)
&lt;span class="kw"&gt;library&lt;/span&gt;(stringr)
&lt;span class="kw"&gt;library&lt;/span&gt;(ggplot2)
&lt;span class="kw"&gt;library&lt;/span&gt;(scales)
&lt;span class="kw"&gt;library&lt;/span&gt;(lubridate)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="datasets"&gt;Datasets&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;crashes&lt;/code&gt; dataset describes most facts about a crash. The datasets &lt;code&gt;causes&lt;/code&gt;, &lt;code&gt;vehicles&lt;/code&gt;, and &lt;code&gt;objects_struck&lt;/code&gt; describe facts that are in a many-to-one relationship with crashes. They can be joined to the &lt;code&gt;crashes&lt;/code&gt; dataset by the common &lt;code&gt;id&lt;/code&gt; column. The &lt;code&gt;causes&lt;/code&gt; dataset can additionally be joined to the &lt;code&gt;vehicles&lt;/code&gt; dataset by the combination of the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;vehicle_id&lt;/code&gt; columns. This is most useful when the resulting table is also joined to the &lt;code&gt;crashes&lt;/code&gt; dataset.&lt;/p&gt;
&lt;h2 id="up-to-date-ness"&gt;Up-to-date-ness&lt;/h2&gt;
&lt;p&gt;The data was last scraped from the &lt;span class="caps"&gt;NZTA&lt;/span&gt; website on 2015-07-20. At that time, the &lt;span class="caps"&gt;NZTA&lt;/span&gt; had published data up to the&amp;nbsp;2015-03-10.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;dim&lt;/span&gt;(crashes)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 540888     32&lt;/code&gt;&lt;/pre&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;dim&lt;/span&gt;(causes)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 888072      7&lt;/code&gt;&lt;/pre&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;dim&lt;/span&gt;(vehicles)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 979930      3&lt;/code&gt;&lt;/pre&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;dim&lt;/span&gt;(objects_struck)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 261276      3&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="accuracy"&gt;Accuracy&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://www.transport.govt.nz/research/roadtoll/#5"&gt;&lt;span class="caps"&gt;NZTA&lt;/span&gt;&lt;/a&gt;, doesn&amp;#8217;t agree with &lt;a href="http://www.transport.govt.nz/research/roadtoll/annualroadtollhistoricalinformation/"&gt;itself&lt;/a&gt; about recent annual road tolls, and this dataset gives a third&amp;nbsp;opinion.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(severity ==&lt;span class="st"&gt; &amp;quot;fatal&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(&lt;span class="dt"&gt;year =&lt;/span&gt; &lt;span class="kw"&gt;year&lt;/span&gt;(date)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;summarize&lt;/span&gt;(&lt;span class="dt"&gt;fatalities =&lt;/span&gt; &lt;span class="kw"&gt;sum&lt;/span&gt;(fatalities))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [16 x 2]
## 
##    year fatalities
## 1  2000        462
## 2  2001        455
## 3  2002        405
## 4  2003        461
## 5  2004        435
## 6  2005        405
## 7  2006        393
## 8  2007        421
## 9  2008        366
## 10 2009        384
## 11 2010        375
## 12 2011        284
## 13 2012        308
## 14 2013        256
## 15 2014        279
## 16 2015         34&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="severity"&gt;Severity&lt;/h2&gt;
&lt;p&gt;Crashes categorised as &amp;#8220;fatal&amp;#8221;, &amp;#8220;serious&amp;#8221;, &amp;#8220;minor&amp;#8221; or &amp;#8220;non-injury&amp;#8221;, based on the casualties. If there are any fatalities, then the crash is a &amp;#8220;fatal&amp;#8221; crash, otherwise if there are any &amp;#8216;severe&amp;#8217; injuries, the crash is a &amp;#8220;serious&amp;#8221;&amp;nbsp;crash.&lt;/p&gt;
&lt;p&gt;The definition of a &amp;#8216;severe&amp;#8217; injury is not&amp;nbsp;clear.&lt;/p&gt;
&lt;p&gt;Minor and non-injury crashes are likely to be under-recorded since they often do not involve the police, who write most of the crash reports upon which these datasets are&amp;nbsp;based.&lt;/p&gt;
&lt;p&gt;A common mistake is to confuse the number of fatal crashes with the number of&amp;nbsp;fatalities.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(severity ==&lt;span class="st"&gt; &amp;quot;fatal&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;nrow&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5042&lt;/code&gt;&lt;/pre&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;sum&lt;/span&gt;(crashes$fatalities)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5723&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="dates-and-times"&gt;Dates and&amp;nbsp;times&lt;/h2&gt;
&lt;p&gt;Three columns of the &lt;code&gt;crashes&lt;/code&gt; dataset describe the date and time of the crash in the &lt;span class="caps"&gt;NZST&lt;/span&gt; time zone&amp;nbsp;(Pacific/Auckland).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt; gives the date without the&amp;nbsp;time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; gives the time where this is available, and &lt;span class="caps"&gt;NA&lt;/span&gt; otherwise. Times are stored as date-times on the first of January,&amp;nbsp;1970.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;datetime&lt;/code&gt; gives the date and time in one value when both are available, and &lt;span class="caps"&gt;NA&lt;/span&gt; otherwise. &lt;code&gt;date&lt;/code&gt; is always available, however &lt;code&gt;time&lt;/code&gt; is&amp;nbsp;not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When aggregating by some function of the date, e.g. by year, then always start from the &lt;code&gt;date&lt;/code&gt; column unless you also need the time. This ensures against accidentally discounting crashes where a time is not&amp;nbsp;recorded.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(&lt;span class="kw"&gt;is.na&lt;/span&gt;(time)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(&lt;span class="dt"&gt;year =&lt;/span&gt; &lt;span class="kw"&gt;year&lt;/span&gt;(date)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggplot&lt;/span&gt;(&lt;span class="kw"&gt;aes&lt;/span&gt;(year, n)) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;geom_line&lt;/span&gt;() +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggtitle&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Crashes missing&lt;/span&gt;&lt;span class="ch"&gt;\n&lt;/span&gt;&lt;span class="st"&gt;time-of-day information&amp;quot;&lt;/span&gt;)

crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(&lt;span class="kw"&gt;is.na&lt;/span&gt;(time)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(&lt;span class="dt"&gt;year =&lt;/span&gt; &lt;span class="kw"&gt;year&lt;/span&gt;(date)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;mutate&lt;/span&gt;(&lt;span class="dt"&gt;percent =&lt;/span&gt; n/&lt;span class="kw"&gt;sum&lt;/span&gt;(n)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggplot&lt;/span&gt;(&lt;span class="kw"&gt;aes&lt;/span&gt;(year, percent)) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;geom_line&lt;/span&gt;() +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;scale_y_continuous&lt;/span&gt;(&lt;span class="dt"&gt;labels =&lt;/span&gt; percent) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggtitle&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Percent of crashes missing&lt;/span&gt;&lt;span class="ch"&gt;\n&lt;/span&gt;&lt;span class="st"&gt;time-of-day information&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="nzcrash_release_files/figure-markdown_github/unnamed-chunk-5-1.png" /&gt; &lt;img src="nzcrash_release_files/figure-markdown_github/unnamed-chunk-5-2.png" /&gt;&lt;/p&gt;
&lt;h2 id="location-coordinates"&gt;Location&amp;nbsp;coordinates&lt;/h2&gt;
&lt;p&gt;99.9% of crashes have coordinates. These have been converted from the &lt;span class="caps"&gt;NZTM&lt;/span&gt; projection to the &lt;span class="caps"&gt;WGS84&lt;/span&gt; projection for convenience with packages like &lt;code&gt;ggmap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Because New Zealand is tall and skinny, you can easily spot the main population centres with a simple&amp;nbsp;boxplot.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggplot&lt;/span&gt;(&lt;span class="kw"&gt;aes&lt;/span&gt;(northing)) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;geom_histogram&lt;/span&gt;(&lt;span class="dt"&gt;binwidth =&lt;/span&gt; .&lt;span class="dv"&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;img src="nzcrash_release_files/figure-markdown_github/unnamed-chunk-6-1.png" /&gt;
&lt;/figure&gt;
&lt;h2 id="vehicles"&gt;Vehicles&lt;/h2&gt;
&lt;p&gt;There can be many vehicles in one crash, so vehicles are recorded in a separate &lt;code&gt;vehicles&lt;/code&gt; dataset that can be joined to &lt;code&gt;crashes&lt;/code&gt; by the common &lt;code&gt;id&lt;/code&gt; column.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(vehicles, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(vehicle) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;arrange&lt;/span&gt;(&lt;span class="kw"&gt;desc&lt;/span&gt;(n))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [12 x 2]
## 
##               vehicle      n
## 1                 Car 728119
## 2            Van, ute  87927
## 3  SUV or 4x4 vehicle  48269
## 4               Truck  44305
## 5          Motorcycle  17733
## 6                  NA  16996
## 7             Bicycle  15713
## 8                 Bus   8066
## 9    Taxi or taxi van   6792
## 10              Moped   3594
## 11   Other or unknown   2043
## 12         School bus    373&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="objects-struck"&gt;Objects&amp;nbsp;struck&lt;/h2&gt;
&lt;p&gt;There can be many objects struck in one crash, so these are recorded in a separate &lt;code&gt;objects_struck&lt;/code&gt; dataset that can be joined to &lt;code&gt;crashes&lt;/code&gt; by the common &lt;code&gt;id&lt;/code&gt; column.&lt;/p&gt;
&lt;p&gt;Q: What are more fatal, trees or lamp&amp;nbsp;posts?&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(objects_struck, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(object %in%&lt;span class="st"&gt; &lt;/span&gt;&lt;span class="kw"&gt;c&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Trees, shrubbery of a substantial nature&amp;quot;&lt;/span&gt;
                               , &lt;span class="st"&gt;&amp;quot;Utility pole, includes lighting columns&amp;quot;&lt;/span&gt;)
  , severity !=&lt;span class="st"&gt; &amp;quot;non-injury&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;&lt;span class="co"&gt;# non-injury crashes are poorly recorded&lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(object, severity) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(object) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;mutate&lt;/span&gt;(&lt;span class="dt"&gt;percent =&lt;/span&gt; n/&lt;span class="kw"&gt;sum&lt;/span&gt;(n)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;select&lt;/span&gt;(-n) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;spread&lt;/span&gt;(severity, percent)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [2 x 4]
## 
##                                     object      fatal   serious     minor
## 1  Utility pole, includes lighting columns 0.04432701 0.2149482 0.7407248
## 2 Trees, shrubbery of a substantial nature 0.06742092 0.2459016 0.6866774&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A: Trees (Don&amp;#8217;t worry, I know it&amp;#8217;s harder than&amp;nbsp;that.)&lt;/p&gt;
&lt;h2 id="causes"&gt;Causes&lt;/h2&gt;
&lt;p&gt;Causes can be joined either to the &lt;code&gt;crashes&lt;/code&gt; dataset (by the common &lt;code&gt;id&lt;/code&gt; column), or to the &lt;code&gt;vehicles&lt;/code&gt; dataset (by both of the commont &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;vehicle_id&lt;/code&gt;)&amp;nbsp;columns.&lt;/p&gt;
&lt;p&gt;The main cause groups are given in the &lt;code&gt;causes_category&lt;/code&gt; column.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(causes, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(cause_category, id) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;tally %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(cause_category) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;summarize&lt;/span&gt;(&lt;span class="dt"&gt;n =&lt;/span&gt; &lt;span class="kw"&gt;n&lt;/span&gt;()) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;arrange&lt;/span&gt;(&lt;span class="kw"&gt;desc&lt;/span&gt;(n)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;mutate&lt;/span&gt;(&lt;span class="dt"&gt;cause_category =&lt;/span&gt; &lt;span class="kw"&gt;factor&lt;/span&gt;(cause_category, &lt;span class="dt"&gt;levels =&lt;/span&gt; cause_category)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggplot&lt;/span&gt;(&lt;span class="kw"&gt;aes&lt;/span&gt;(cause_category, n)) +&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;geom_bar&lt;/span&gt;(&lt;span class="dt"&gt;stat =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;theme&lt;/span&gt;(&lt;span class="dt"&gt;axis.text.x =&lt;/span&gt; &lt;span class="kw"&gt;element_text&lt;/span&gt;(&lt;span class="dt"&gt;angle =&lt;/span&gt; &lt;span class="dv"&gt;90&lt;/span&gt;, &lt;span class="dt"&gt;hjust =&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;, &lt;span class="dt"&gt;vjust =&lt;/span&gt; .&lt;span class="dv"&gt;5&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;img src="nzcrash_release_files/figure-markdown_github/unnamed-chunk-9-1.png" /&gt;
&lt;/figure&gt;
&lt;p&gt;That&amp;#8217;s odd &amp;#8212; where are speed, alcohol, and restraints? They&amp;#8217;re given in &lt;code&gt;cause_subcategory&lt;/code&gt;.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;causes %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(cause_subcategory ==&lt;span class="st"&gt; &amp;quot;Too fast for conditions&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(cause) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;arrange&lt;/span&gt;(&lt;span class="kw"&gt;desc&lt;/span&gt;(n))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [8 x 2]
## 
##                                cause     n
## 1                          Cornering 37861
## 2                        On straight 10196
## 3                                 NA  7119
## 4        To give way at intersection  1658
## 5           At temporary speed limit  1010
## 6              At crash or emergency    55
## 7       Approaching railway crossing    44
## 8 When passing stationary school bus    37&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There&amp;#8217;s nothing there about speed limit violations, because it&amp;#8217;s impossible to tell what speed a vehicle was going at when it&amp;nbsp;crashed.&lt;/p&gt;
&lt;p&gt;More worryingly, how is &amp;#8220;Alcohol test below limit&amp;#8221; a cause for a crash? Hopefully they filter those out when making policy&amp;nbsp;decisions.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;levels&lt;/span&gt;(causes$cause) &amp;lt;-&lt;span class="st"&gt;                &lt;/span&gt;&lt;span class="co"&gt;# Wrap facet labels&lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;str_wrap&lt;/span&gt;(&lt;span class="kw"&gt;levels&lt;/span&gt;(causes$cause), &lt;span class="dv"&gt;13&lt;/span&gt;)
crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(causes, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(cause_subcategory %in%&lt;span class="st"&gt; &lt;/span&gt;&lt;span class="kw"&gt;c&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Alcohol or drugs&amp;quot;&lt;/span&gt;)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(cause, id) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;tally %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;group_by&lt;/span&gt;(cause) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;summarize&lt;/span&gt;(&lt;span class="dt"&gt;n =&lt;/span&gt; &lt;span class="kw"&gt;n&lt;/span&gt;()) %&amp;gt;%&lt;span class="st"&gt;               &lt;/span&gt;&lt;span class="co"&gt;# This extra step deals with many causes per crash&lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;arrange&lt;/span&gt;(&lt;span class="kw"&gt;desc&lt;/span&gt;(n)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;mutate&lt;/span&gt;(&lt;span class="dt"&gt;cause=&lt;/span&gt; &lt;span class="kw"&gt;factor&lt;/span&gt;(cause, &lt;span class="dt"&gt;levels =&lt;/span&gt; cause)) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;ggplot&lt;/span&gt;(&lt;span class="kw"&gt;aes&lt;/span&gt;(cause, n)) +&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;geom_bar&lt;/span&gt;(&lt;span class="dt"&gt;stat =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;) +
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;theme&lt;/span&gt;(&lt;span class="dt"&gt;axis.text.x =&lt;/span&gt; &lt;span class="kw"&gt;element_text&lt;/span&gt;(&lt;span class="dt"&gt;angle =&lt;/span&gt; &lt;span class="dv"&gt;90&lt;/span&gt;, &lt;span class="dt"&gt;hjust =&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;, &lt;span class="dt"&gt;vjust =&lt;/span&gt; .&lt;span class="dv"&gt;5&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;img src="nzcrash_release_files/figure-markdown_github/unnamed-chunk-11-1.png" /&gt;
&lt;/figure&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;&lt;span class="kw"&gt;rm&lt;/span&gt;(causes)                             &lt;span class="co"&gt;# Because we messed up the factor levels&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time, join &lt;code&gt;causes&lt;/code&gt; to both &lt;code&gt;vehicles&lt;/code&gt; and &lt;code&gt;crashes&lt;/code&gt; to assess the drunken cyclist&amp;nbsp;menace.&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode r"&gt;&lt;code class="sourceCode r"&gt;crashes %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(severity ==&lt;span class="st"&gt; &amp;quot;fatal&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;select&lt;/span&gt;(id) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(vehicles, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;filter&lt;/span&gt;(vehicle ==&lt;span class="st"&gt; &amp;quot;Bicycle&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;inner_join&lt;/span&gt;(causes, &lt;span class="dt"&gt;by =&lt;/span&gt; &lt;span class="kw"&gt;c&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;, &lt;span class="st"&gt;&amp;quot;vehicle_id&amp;quot;&lt;/span&gt;)) %&amp;gt;%&lt;span class="st"&gt; &lt;/span&gt;
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;count&lt;/span&gt;(cause) %&amp;gt;%
&lt;span class="st"&gt;  &lt;/span&gt;&lt;span class="kw"&gt;arrange&lt;/span&gt;(&lt;span class="kw"&gt;desc&lt;/span&gt;(n))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [55 x 2]
## 
##                                                                  cause  n
## 1  Behind when changing lanes position or direction (includes U-turns) 26
## 2                                                                   NA 20
## 3          When required to give way to traffic from another direction 10
## 4                                                Wandering or wobbling  8
## 5                                                     At Give Way sign  4
## 6                           Cyclist or M/cyclist wearing dark clothing  4
## 7                                        Driving or riding on footpath  4
## 8                                             On left without due care  4
## 9                              When pulling out or moving to the right  4
## 10                                                 At steady red light  3
## ..                                                                 ... ..&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think we all know what &amp;#8220;Wandering or wobbling&amp;#8221;&amp;nbsp;means.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/nacnudus/nzcrash"&gt;package&lt;/a&gt; on Github at&amp;nbsp;https://github.com/nacnudus/nzcrash.&lt;/p&gt;
</summary><category term="R"></category></entry></feed>